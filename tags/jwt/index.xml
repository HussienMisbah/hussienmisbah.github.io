<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JWT on My New Hugo Site</title>
    <link>http://example.org/tags/jwt/</link>
    <description>Recent content in JWT on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>hussienmisbah11@gmail.com (0xMesbaha)</managingEditor>
    <webMaster>hussienmisbah11@gmail.com (0xMesbaha)</webMaster>
    <lastBuildDate>Sat, 07 May 2022 12:49:13 +1000</lastBuildDate>
    <atom:link href="http://example.org/tags/jwt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unicode Hackthebox writeup</title>
      <link>http://example.org/posts/linux-machines/2022-05-07-unicode/</link>
      <pubDate>Sat, 07 May 2022 12:49:13 +1000</pubDate><author>hussienmisbah11@gmail.com (0xMesbaha)</author>
      <guid>http://example.org/posts/linux-machines/2022-05-07-unicode/</guid>
      <description>&lt;p&gt;In This medium Box we are playing with JWT Tokens in specific the jku Claim Misuse , which will let us login as admin account then we will use the Unicode Encoding to read files on the system. Eventually we will find a password for user then ssh to login. for the root part we are abusing the sudo privilege on a binary which can read files on the system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secret Hackthebox writeup</title>
      <link>http://example.org/posts/linux-machines/2022-03-26-secret/</link>
      <pubDate>Sat, 26 Mar 2022 00:45:19 +0200</pubDate><author>hussienmisbah11@gmail.com (0xMesbaha)</author>
      <guid>http://example.org/posts/linux-machines/2022-03-26-secret/</guid>
      <description>&lt;p&gt;In this Box we are going to follow documentation instructions to create a new user , will face sensitive data exposure will let us see a delete commit ,this will help us change our token to the admin token and login as admin , reading source codes we find a command injection so we will have a reverse shell as a user, for the root part there is a suid binary that can read any file on the system and count it , and in the source code it has &lt;code&gt;PR_SET_DUMPABLE&lt;/code&gt; so we can dump it if it receives a signal while running ,we will send segmentation fault signal and dump the process then performing strings on the dump we can read the root ssh private key and login as root&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
